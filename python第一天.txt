西安 ：辛博伟

一：编程语言是什么？

	1.编程语言是用来控制计算机为我们做事情的。

	2.陕西话：嘹咋了(liao za lie):指的是太好了。得是(dei shi):表示疑问,是不是？

	3.如何语言：在大脑皮层语言中枢建立:点--线--面。循序渐进、多练。李开复（暑假10万行）

二：python的概述：

	1.python由荷兰Guido(龟叔)于1989年圣诞节设计出来。

	2.2018年7月IEEE的语言排行榜python高举首位。

	3.python的特点：1>简单 2>开源 3>面向对象 4>可扩展 5>可移植

	4.python的应用：很广，见图。

	  补充：python的外号：胶水语言。

		语言的分类：

		1>机器语言
	        2>汇编语言
		3>高级语言
		4>脚本语言：python、JavaScript、ruby、VB。。。
		
	5.python3.x与2.x区别：

		不能简单的认为3.x就是2.x的升级。

		1>性能：总体来说3.x的性能低于2.x。

		2>编码：python3.x系列默认支持UTF-8（万国码）

		3>语法：去除了<>全部换成！=
三：python的安装：（Windows、linux、macos）


	1.获得安装包：www.python.org （org非盈利性组织）

	2.安装python非常简单，基本都是下一步，需要注意的是：要勾选：add python to path。
	  如果不勾选add python to path则需要手动添加环境变量。

	  python如果安装高版本的不会把低版本的替换掉。
	
	3.在开始种---cmd---python如果有相关的提醒则说明安装成功。

	4.我们一般不使用python直接编程，而是使用python自带的IDE：IDLE。

	   IDE：集成开发环境。

	   IDLE：python自带的集成开发环境。

	5.其实在实际工作中也很少使用IDLE，而是使用pycharm。

	   pycharm是一种企业级的IDE,它能够语法高亮显示。智能提示、项目管理等。

	   pycharm企业版收费：199$

	   pycharm的社区版本免费：JetBrains。

	   自动化：selenium+python （pycharm）


	   项目位置：C:\Users\Administrator\PycharmProjects\python第一天

----------------------------------------------------------------------------

四：python的原理及与C语言的区别：


	1.源代码(xxx.py)---------->字节码（xxx.pyc）--------->PVM

	2.python与C语言的区别：

		1>C语言是面向过程的，而python是面向对象的。

		2>C语言可以加密，而python不能加密。

		3>python的生产效率高而C语言的执行效率高。


-------------------------------------------------------------------------
五：python的基本语法：

	1.注释：
		注释率是评价软件好坏的一个标准，20%。

		C语法：// 

		python:

		#:单行注释 快捷方式: ctrl+/

		"""  """：多行注释

		python提倡一行写一句。
-------------------------------------------------
	2.缩进：

		缩进是python最具特色的地方。缩进不光让代码显示有层次而且缩进具有实际意义。

		如果不缩进不光python的代码不美观，而且执行结果与我们的期望可能会相差很远。

		缩进是python的灵魂。

		四个空格或者一个tab是缩进。

例如：

x=8
x=9
if x>=0:
    print("+++")
else:
    print("---")
	
	3.变量：

		常量：在程序的执行过程中其值不变的量。例如：s=PI*r*r

		变量：在程序的执行过程中其值可以改变的量。
	
		在python中我们使用=给变量赋值，等号左边为变量名，右边为变量的值。
		注意：==表示相等。

		python使用=赋值的特点：
		
		1>可以给多个变量赋同一个值：x=y=z=9
		2>可以多给多个变量同时赋值：a,b,c,d=9,5,2,7
		

案例：用户输入两个数然后交换这两个数：

a=input("请输入a:")
b=input("请输入b:")
temp=a
a=b
b=temp
print(a,b)

a=input("请输入a:")
b=input("请输入b:")
a,b=b,a
print(a,b)

-----------------------------------
	4.python的输入：

	input()函数用于从标准的设备中输入(键盘)，input()默认输入的是字符串。
例如：
a=input("请输入a:")
print(a)


	5.python的输出：

	print()函数用于输出内容。

	使用百分号格式化输出：%s:字符串  %d:以整型输出  %f:以浮点型输出


a=input("请输入a:")
b=input("请输入b:")
print("交换前为:%s,%s"%(a,b))
a,b=b,a
print("交换后为:%s,%s"%(a,b))
	
a=int(input("请输入a:"))
b=int(input("请输入b:"))
print("交换前为:%d,%d"%(a,b))
a,b=b,a
print("交换后为:%d,%d"%(a,b))
	
----------------------------------------------

六：python的数据类型：数字类型、字符串、列表、元组、字典、集合

	1.数字类型(number):
	
		数字类型有四种：int、float、bool、complex
		int:整型
		
		float：浮点数

		bool：布尔型，对于数字而言只有0和1，0表示假，1表示真。

		complex：表示数学中的复数。
例如：
a=3.6
print(int(a))		

	2.字符串(string):

		字符串是一种表示文本的数据类型，字符串使用引号表示
例如：
print("dsadsadsadsa")
print('dsadsadsadsa')
		
字符串是有序的，字符串有索引，索引是从0开始。
string_1="zhourunfa"
print(string_1[2])


	3.列表（list）:

	使用中括号括起来，列表有序：是从0开始计算。

例如：
list_1=["abc","张三","123",456]


列表页是有序的，字符串有索引，索引是从0开始。

list_1=["abc","张三","123",456]
print(list_1[3])
--------------------------------------------------------
	
	4.元组(tuple):

	使用小括号括起来：元组不能改变。
例如：
tuple_1=("abc","张三","123",456)

tuple_1=("abc","张三","123",456)
print(tuple_1[1])

	5.字典(dict):

	字典的特点是无序的并且没有索引。字典只有：键key、值value

	字典的键必须唯一，而值可以不唯一。
	
dict_1={"name":"周润发","ID":"007","sex":"男"}

其中：name、ID、sex是：键

其中：周润发、007、男是：值

通过键来访问字典：

dict_1={"name":"周润发","ID":"007","sex":"男"}
print(dict_1["ID"])


	6.集合(set):

	集合是一种数据类型，可以理解成为数学中的集合。

	集合分为两种：
	1.可变集合。set
	2.不可变集合。forzenset

	集合没有顺序并且不能重复。

set_1=set("hello")
set_2=frozenset("hello")
print(set_1)
---------------------------------------------

总结:python的六种数据类型各有特点，但是在我眼里他们没有什么本质的区别，他们都属于数据类型，他们用各自的特点来描述python程序中不同的数据。好比是：你家里的锅碗瓢盆。

---------------------------------------------

补充：

	1.python标识符：包含数字、字母、下划线并且不能以数字开头。

	2.使用python计算：print(60*60*24*31)

	  请问：1998的1998次方个位数是几？


---------------------------------------------

下午预告：

	1.python的运算：

	2.分支结构：

	3.循环结构：

	4.跳转语句：

-------------------------------------------

一：标识符与关键字：


	在程序中药表示一些事物，我们可以定义一些符号和名称，这些符号和名称就是标识符。

	例如：变量名和函数名都属于标识符。

	标识符的规则：包含数字、字母、下划线并且不能以数字开头。 3a=8 错！

	
	关键字：keyword。关键字是一种特殊的标识符，关键字是python自己定义的，不允许开发者自定义。python提供了很多关键字：33个。

	如何查看python的关键字：help()   keywords

	变量名和函数名都属于标识符,起名时不能使用关键字。
	
False               def                 if                  raise
None                del                 import              return
True                elif                in                  try
and                 else                is                  while
as                  except              lambda              with
assert              finally             nonlocal            yield
break               for                 not                 
class               from                or                  
continue            global              pass                

二：python运算符：


	1.算数运算符：+-*/ %(取余或求模)  // (取整除) ** （乘方）

print('5+6')
print(5+6)
print(4-3)
print(4*3)
print(4/3)

print(4.3-2)
print(4.1-2)

疑问:为什么后面的结果差一点点？	

计算机只能识别二进制，十进制小数转为二进制时可能会产生误差。

print(10%3)
print(8%3)
print(13//3)
print(2**10)


	2.复合运算符：

	c=c+a-----------------c+=a
	c=c-a-----------------c-=a
	c=c*a-----------------c*=a
	c=c/a-----------------c/=a
	c=c**a----------------c**=a
	c=c%a-----------------c%=a
	c=c//a----------------c//=a


	3.比较运算符：<  >  <=  >=  !=   ==


重要：	4.逻辑运算符： and or  not (C语言：&& || not)

	and:逻辑与

		x and y:

			如果x为假，则直接输出x。

			如果x为真，则继续判断并输出y。

bool：0为假，1为真。0为假除了0之外都是真。

例如：
print(0 and 0)
print(0 and 1)
print(1 and 0)
print(3 and 5)
print(5 and 3)
--------------------------------------------------

	or：逻辑或

		x or y：
			如果x为真，则直接输出x。
			如果x为假，则继续判断并输出y。

print(0 or 0)
print(0 or 1)
print(1 or 0)
print(3 or 5)
print(5 or 3)


	not：逻辑非

		不是！

print(not 0)
print(not 1)
print(not 8)
--------------------------------

	5.成员运算符：

		in：如果在指定的序列中找到了成员则返回True，否则返回False。

		not in：如果在指定的序列中没有找到指定成员则返回True，否则返回False。

例如：
a=889
list_1=[9,5,66,99,889,115]
if a in list_1:
    print("哈哈")
else:
    print("呵呵")

a=889
list_1=[9,5,66,99,889,115]
if a not in list_1:
    print("哈哈")
else:
    print("呵呵")
	

	6.运算符的优先级：

	逻辑运算符的优先级：()>not>and>or

	算数运算符**<---------------------------逻辑运算符 or
	 
	算数运算符>关系运算符>赋值运算符>成员运算符>逻辑运算符	
	
练习：

print(3>2 and 5<3 or 3<1 and 5>4)

print(3>2 and (5<3 or 3>1) and 5>4)

print(3>2 and (5<3 or 3<1) and 5>4)

挑战：==在python中是什么意思？它与is有什么区别？

--------------------------------------------------------
三：python常用语句：选择结构（分支结构）：

	任何程序都可以仅用三种结构来实现：

	顺序结构：就是按照程序书写的顺序执行。除非特别声明，程序总是按照顺序执行。

	选择结构：就是程序有条件的执行。选择结构也称为分支结构(if)

	循环结构：就是程序有条件的重复执行。(while for)


例如：	假如时光倒流：到了大学军训时：报数：

---------------------------

	选择结构：选择结构找那个使用最多的是if：有四种if


	1.if单分支：

age=int(input("请输入年龄:"))
if age>=35:
    print("你是一个三旬老汉！")


	2.if else 双分支：

age=int(input("请输入年龄:"))
if age>=35:
    print("你是一个三旬老汉！")
else:
    print("你是个小鲜肉")

案例：用户输入月份判断该月是上半年还是下半年：

m=int(input("请输入月份:"))
if m<=6 and m>0:
    print("该月是上半年")
else:
    print("该月是下半年")

思考上述程序的bug是什么？	


	3.if 嵌套()

在if判断中又有if判断就是嵌套。


m=int(input("请输入月份:"))
if 0<m<=6:
    if 0<m<=3:
        print("第一季度")
    else:
        print("第二季度")
    print("该月是上半年")
else:
    if 6<m<=9:
        print("第三季度")
    else:
        print("第四季度")
    print("该月是下半年")


练习：判断属于哪个if？

如果今天下午不下雨，我们就去踢足球。  (单分支)

如果今天下午不下雨，我们就去踢足球，否则我们就去吃烧烤。（双分支）

如果今天下午不下雨，如果我又不加班，咱们就去踢足球。（嵌套）


	4.if elif 多分支：

语法：
	if  表达式1：

		语句块1

	elif 表达式2：
		
		语句块2

	elif 表达式3：
		
		语句块3

	。。。

	else:
		语句块n

注意：多分支选择结构由if、一个或者多个elif、else组成，else可以省略。一个if语句可以有多个elif但是只能有一个else。

h=float(input("请输入身高单位m:"))
m=float(input("请输入体重单位:kg"))
BIM=m/h**2
print(BIM)
if BIM<18.5:
    print("你太瘦了")
elif 18.5<=BIM<=25:
    print("身材完美")
elif 25<BIM<=28:
    print("你微胖")
elif 28<BIM<=32:
    print("你肥胖")
else:
    print("严重肥胖")

总结：

1.else、elif 是if语句的子语句块，不能独立使用。

2.每个条件后面都要使用: 冒号表示满足条件后需要执行的语句块。选择结构和循环结构中冒号必修要有

3.python使用缩进来划分语句块，相同缩进数的语句组成一个语句块。
	

思考：如何判断一个三角形是什么类型的？多分支、嵌套。

---------------------------

四：python常用语句：循环语句：

	1.while循环：

	语法：while  条件表达式

		     满足条件表达式时执行的语句

例如：使用while循环计算 1--100之间的整数和：

i=0        i=1     i=2          i=3       ......    i=n


s0=0     s1=1+s0    s2=2+s1      s3=3+s2            sn=n+s(n-1)    

s0=0

s的初始值为什么要是0？s1=1+s0

i=1
s=0
while i<=100:
    s=s+i
    i=i+1
print(s)


i=1
s=0
while i<=100:
    s+=i#s=s+i
    i+=1#i=i+1
print(s)

注意：python的变量不需要声明但是在使用之前必须赋值

i=1
while i<=20:
    print(i)
    print("我爱你中国")
    i+=1

-----------------------------------------------------

	2.while嵌套:
	
		指的是在while循环中又包含while循环。

		语法：while 条件1：

		      	    满足条件1时做的事情

		            while 条件2：

				   满足条件2时做的事情

使用while嵌套实现:

****
****
****
****
****
****					


思路：
1.print(*) 
2.把一个*循环四遍
3.把****循环六遍

python默认是换行的，想要不换行，需要使用：end=""	
i=1
while i<=6:
    i+=1
    print("")
    j=1
    while j<=4:
        print("*",end="")
        j+=1


python不使用大括号来表示代码块，C语言使用的是大括号。

---------------------------------------------------------
	3.for循环：

	python的for循环可以便利任何有序项目。

语法：

	for 变量 in  序列

		循环体

例如：	
list_1=[9,5,2,7]
print(list_1)
for i in list_1:
    print(i)

	上述for循环是将列表循环了一遍，要深刻的理解for循环要结合其他内容来讲：


	1>结合range()函数来讲for循环

		range()函数是python提供的一个内置函数，它可以生成一个数字序列。

		range()格式：

			range(start,end,step)
			

			start:开始

			end:结束
	
			step:步长

range()函数的区间是：前闭后开[)

例如：

for i in range(1,10,1):
    print(i)

--------------------------------------------------
	2>结合break和continue讲解：

		python中的break和continue与C语言的一模一样。


	break：结束整个循环

	continue：结束本次循环，继续进行下一次循环。

for i in range(1,10):
    if i==3:
        break
    print(i)

for i in range(1,10):
    if i==3:
        continue
    print(i)

重点：为什么要设计为前闭后开 [)  为了无缝对接。


案例：使用for循环计算1--100之间的整数和：

i=1
s=0
while i<=100:
    s+=i#s=s+i
    i+=1#i=i+1
print(s)

s=0
for i in range(1,101):
    s+=i
print(s)

计算1--100偶数和：

s=0
for i in range(0,101,2):
    s+=i
print(s)

计算1--100奇数和：

s=0
for i in range(1,101,2):
    s+=i
print(s)



	4.for嵌套

	for循环下还有for循环：

案例：使用for循环实现：


****
****
****
****
****
****

思路：
1.print(*) 
2.把一个*循环四遍
3.把****循环六遍

for i in range(1,7):
    print("")
    for j in range(1,5):
        print("*",end="")

总结：python常用的结构：顺序结构、选择结构、循环结构。

      其中选择结构由四种：if单分支、if双分支、if嵌套、if elif多分支

      循环有两种：while循环和for循环

-------------------------------------------------------------------
	
预告：参考鲸打卡。


-------------------------------------------------------------------
	








		